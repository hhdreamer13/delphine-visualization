import * as d3 from "d3";
import { useEffect, useRef, useMemo } from "react";
import _ from "lodash";

const width = 600;
// const height = 450;
// const margin = { top: 5, right: 5, bottom: 20, left: 35 };

const flowerPetalPath = [
  {
    index: 0,
    name: "Tooth",
    path: "M4.67,.52c1.97,1.74,4.04,3.48,6.01,5.3s3.95,3.57,5.92,5.39c.99,.87,1.88,1.83,2.87,2.7,.9,.87,1.88,1.74,2.78,2.7,3.59,3.48,6.82,6.87,9.51,9.83,2.69,2.96,4.94,5.48,6.37,7.3,.72,.87,1.35,1.65,1.7,2.17s.63,.78,.63,.78c0,0-.27-.17-.81-.52s-1.35-.87-2.33-1.48c-1.97-1.3-4.76-3.22-8.08-5.65-3.23-2.43-7-5.3-10.86-8.44-.99-.78-1.97-1.65-2.96-2.43-.99-.78-1.97-1.65-2.96-2.52-1.97-1.74-4.04-3.48-6.01-5.3S2.51,6.78,.63,4.96l-.63-.61c1.88,12,8.26,44.18,23.6,57.92,34.73,31.22,31.32,9.83,42.89-2.26,11.58-12.09,33.83-10.35-.9-41.57C50.07,4.61,16.51,.96,4.04,0c.18,.17,.45,.35,.63,.52Z",
  },
  {
    index: 1,
    name: "Cartoony",
    path: "M78.25,73.54c-.37-11.9-13.33-24.6-27.43-36.56,.41,.24,.82,.5,1.21,.72,13.21,10.02,28.67,17.72,37.77,18.19,4.58-2.75,2.25-8.62-7.93-18.12,12.25,3.37,16.14-.83,13.02-4.93C83.85,14.54,66.68,5.17,51.14,1.06c-13.44-2.42-25.89,.15-38.13-.56,5.55,5.81,13.73,9.86,17.16,13.81-6.34-1.13-12.62-4.3-19.03-4.63,.62,5.3,6.14,11.71,6.16,15.12C11.13,20.44,7.04,15.53,0,11.4c.9,2.27,2.36,3.73,3.17,5.41,3.13,4.22,3.95,6.97,6.07,10.68,2.76,7.32,6.26,15.2,9.82,20.9,7.74,11.27,18.13,21.18,29.36,25.59,7.25,2.35,9.71-.66,6.09-9.53,12.45,9.7,22.54,11.76,23.74,9.08h0Z",
  },
  {
    index: 2,
    name: "Realistic v1 - simple",
    path: "M0,6.95c.96,2.16,1.91,4.34,2.29,6.68,1,4.92,.15,9.98,.97,14.91,.69,4.3,2.03,8.46,3.66,12.49,1.76,4.28,3.63,8.59,6.51,12.25,2.34,3.14,5.39,5.62,8.25,8.25,1.85,1.54,3.45,3.44,5.53,4.7,.74,.51,1.71,.46,2.5,.1,.4-1,.6-2.06,.89-3.09,3.01,1.69,5,4.68,8.04,6.32,2.97,1.63,6.21,2.66,9.41,3.72,0-.9,.01-1.79,.02-2.68,4.68,4.02,11.13,3.74,16.72,5.47,1.22,.32,2.89,.4,3.58-.9,1.14-2.08,1.31-4.52,1.53-6.83,.41-8.52-1.52-17.38-6.55-24.39,2.58,.24,5.49,.66,7.67-1.09-3.23-3.97-4.14-9.18-6.85-13.44-1.37-2.24-2.84-4.44-4.61-6.39-1.61-1.78-3.72-3-5.48-4.61,.78-.74,2.1-1.28,2.11-2.52,.04-2.23-1.31-4.16-2.59-5.87C49.25,4.63,42.71,1.28,35.94,.17c-4.75-.64-9.48,.62-14.05,1.83-6,1.56-12.44,3.67-18.57,1.51L0,6.95Z",
  },
  {
    index: 3,
    name: "Realistic v2 - pointy",
    path: "M77.95,84.73s-.54-2.63-1.42-4.38c-.89-1.76-2.08-2.57-3.45,.97-.46-.23-1-.63-1.62-1.12-.65-.48-1.37-1.05-2.13-1.67-.75-.62-1.54-1.27-2.34-1.92-.52-.43-1.4-1.09-1.96-1.48-.16-.11-.32-.22-.48-.33-3.26-2.2-5.93-3.36-5.94-.58-2.79-1.41-7.98-5.08-12.58-7.4-.28-.15-.56-.29-.84-.43-.29-.13-.57-.25-.86-.38-.56-.24-1.1-.46-1.62-.66-1.03-.39-1.95-.67-2.72-.8-1.53-.27-2.46,.06-2.42,1.31-.38-.19-.74-.45-1.14-.72-.41-.27-.82-.59-1.24-.95-.84-.71-1.69-1.56-2.55-2.48-.87-.91-1.83-1.81-2.72-2.74-.9-.92-1.75-1.85-2.67-2.6-.89-.77-1.72-1.46-2.47-1.98-.75-.52-1.41-.88-2-.96-1.15-.18-1.76,.56-1.7,2.78-1.25-.97-2.32-2.77-3.3-4.91-.53-1.03-1.07-2.11-1.58-3.21-.26-.55-.51-1.1-.76-1.64-.25-.54-.5-1.07-.77-1.55-1.07-1.94-2.08-3.59-2.96-4.28-.91-.66-1.67-.35-2.21,1.47-.79-1.11-1.37-2.27-1.82-3.47-.45-1.2-.76-2.45-1.1-3.62-.64-2.37-1.08-4.83-2.06-7.02-1.02-2.13-1.89-4.21-2.62-6.13-.36-.98-.73-1.83-1.05-2.67-.32-.83-.61-1.61-.87-2.33,12.88,4.55,13.94,.88,2.52-7.53,1.32-.81,2.96-1.72,4.92-2.62,1.96-.9,4.25-1.82,6.78-2.51,2.54-.71,5.81-1.96,9.39-2.93C27.12,.37,30.98-.27,34.61,.11c-1.98,1.09-2.05,1.87-1,2.54,1.06,.67,3.29,1.2,6.05,1.77,1.4,.26,2.86,.62,4.38,.98,1.52,.36,3.09,.76,4.61,1.19,1.55,.41,2.96,.96,4.27,1.51,1.31,.56,2.49,1.16,3.44,1.81-2.24,.42-2.21,1.28-.85,2.41,1.34,1.16,3.93,2.73,7.03,4.48,1.52,.9,3.09,1.92,4.7,2.95,.8,.52,1.6,1.04,2.39,1.57,.79,.53,1.51,1.12,2.24,1.68,1.44,1.14,2.77,2.28,3.89,3.39,1.12,1.11,1.93,2.27,2.49,3.31-2.68-.63-3.72,0-3.78,1.35-.07,1.36,.87,3.45,2.14,5.87,.59,1.24,1.28,2.56,1.98,3.9,.7,1.35,1.46,2.69,2.04,4.08,.61,1.37,1.18,2.71,1.64,3.94,.23,.62,.43,1.21,.6,1.77,.15,.57,.25,1.12,.32,1.62-3.43-2.44-3.57,2.58-3.07,8.53,.06,1.53,.15,3.12,.26,4.68,.1,1.57,.26,3.07,.26,4.54,.06,2.89,.11,5.28-.06,6.51-1.07-.91-1.76-.82-2.16-.21-.21,.31-.33,.74-.43,1.26-.11,.53-.18,1.13-.22,1.76-.15,2.53,.18,5.44,.18,5.44Z",
  },
  {
    index: 4,
    name: "Realistic v3 - miniature",
    path: "M5.69,2.65c.55-.86,2.47-1.6,3.44-1.4,5.84,1.25,4.57-.11,8.37-.47,5.37-.5,10.03-1.3,16.64-.34,2.36,.34,5,.66,6.67,2.43,.85,1.25-.14,2.73-.67,3.96,2.69,1.51,5.98,1.58,8.73,2.96,2.59,1.26,5.05,2.85,7,4.92,2.16,2.27,2.59,5.49,3.78,8.28,.93,2.29,2.97,3.83,4.55,5.65-1.2,.61-2.42,1.2-3.64,1.79,2.96,4.26,6.03,8.47,8.43,13.08,2.08,3.97,3.11,8.46,5.57,12.23,1.97,2.95,5.18,4.72,7.72,7.13-5.26,3.9-11.92,5.33-18.21,5.04-4.73-.2-9.37-1.2-13.65-2.94-1.94-.78-3.51-2.34-5.63-2.73-1.77,.65-2.47,2.76-4.27,3.38-2.49,.81-5.12,.54-7.58,.08-2.14-.45-4.44-1.01-5.89-2.67-1.34-1.29-2.24-3.08-3.98-3.94-1.83-.4-2.99,2.46-4.82,1.65-3.51-1.24-5.32-4.68-8.33-6.61-3.99-2.63-8.35-5.61-9.46-10.52-1.67-7.37,1.48-11.53,1.91-21.4,.17-3.94-.9-7.57-1.83-10.31-.28-.81,.22-3.01,.85-3.66,.36-.37,.8-.88,1.27-1.46,.1-.12,3.33,.23,5.58,1.63,2.96,1.84,8.32,8.95,8.45,8.78,.11-.15-5.43-7.47-8.09-9.59-2.15-1.72-4.72-2.39-4.63-2.51,.67-.9,1.29-1.79,1.71-2.45Z",
  },
  {
    index: 5,
    name: "Digital with short hollow",
    path: "M27.33,22.14c-3.5-4.04-4.62-5.08-9.92-8.62-2.09-1.4-4.97-3.37-8.38-5.86,1.8-2.09,4.09-5.17,5.18-7.66,4.03,1.77,8.09,2.84,12.4,2.54,17.42-1.11,39.34,1.79,44.24,31.96,2.29,15.14,7.74,26.41,14.74,42.82-19.15-9.88-31.99-8.39-44.26-11.05C18.12,59.05,11.23,50.73,5.49,27.47c-.54-5.15-2.78-9.28-5.49-13.52,2.29-.76,5.91-3.19,7.71-4.83,1.84,1.71,12.74,8.54,17.49,11.69,.21,.14,2.38,1.62,2.13,1.33Z",
  },
  {
    index: 6,
    name: "Realistic v4 - miniature little hollow",
    path: "M5.69,2.65c.55-.86,2.47-1.6,3.44-1.4,5.84,1.25,4.57-.11,8.37-.47,5.37-.5,10.03-1.3,16.64-.34,2.36,.34,5,.66,6.67,2.43,.85,1.25-.14,2.73-.67,3.96,2.69,1.51,5.98,1.58,8.73,2.96,2.59,1.26,5.05,2.85,7,4.92,2.16,2.27,2.59,5.49,3.78,8.28,.93,2.29,2.97,3.83,4.55,5.65-1.2,.61-2.42,1.2-3.64,1.79,2.96,4.26,6.03,8.47,8.43,13.08,2.08,3.97,3.11,8.46,5.57,12.23,1.97,2.95,5.18,4.72,7.72,7.13-5.26,3.9-11.92,5.33-18.21,5.04-4.73-.2-9.37-1.2-13.65-2.94-1.94-.78-3.51-2.34-5.63-2.73-1.77,.65-2.47,2.76-4.27,3.38-2.49,.81-5.12,.54-7.58,.08-2.14-.45-4.44-1.01-5.89-2.67-1.34-1.29-2.24-3.08-3.98-3.94-1.83-.4-2.99,2.46-4.82,1.65-3.51-1.24-5.32-4.68-8.33-6.61-3.99-2.63-8.35-5.61-9.46-10.52-1.67-7.37,1.48-11.53,1.91-21.4,.17-3.94-.9-7.57-1.83-10.31-.28-.81,.22-3.01,.85-3.66,1.21-1.25,3.31-4.08,4.29-5.6Z",
  },
  {
    index: 7,
    name: "Fire",
    path: "M22.71,8.17c.78-1.7,2.08-3.12,3.72-4.01C29.81,2.31,35.22,.1,42.09,0c12.34-.17,20.67,6.62,22.79,8.45,0,0-10.85-1.77-12.18,1.57,0,0,20.66,1,21.67,31.36,0,0-10.76-13.64-18.5-12.86,4.76,3.13,26.77,19.67,21.04,54.03,0,0-3.26-12.86-20.9-14.73-17.64-1.87-26.52-9.31-26.52-9.31,0,0-.65,6.94,6.38,14.58,0,0-9.66-.47-24.7-14.96-3.66-3.52-8.66-8.91-10-15.88-1.29-6.76-2.34-11.56,1.67-14.4,1.5-1.07,3.17-1.9,4.59-3.07,9.13-7.52,11.32-8,15.28-16.61Z",
  },
  {
    index: 8,
    name: "Fire 2 Laleh Shape",
    path: "M21.78,.39L4.2,3.77,1.27,7.13,.2,22.59s-1.46,18.19,3.44,25.38c7.6,11.16,31.72,29.33,39.74,29.6-3.81-6.32-2.7-19.51-2.7-19.51,18.26,1.05,22.34,17.7,22.34,17.7,11.14-28.89-6.2-46.56-6.2-46.56,7.51,3.67,19.59-1.86,19.59-1.86-9.24-6.64-23.22-19.5-23.22-19.5C40.95-2.58,21.78,.39,21.78,.39Z",
  },
  {
    index: 9,
    name: "Fire 3 with hollow",
    path: "M21.78,.39L4.55,3.7c-.23,.04-.44,.17-.6,.34h0c-.41,.47-.33,1.18,.17,1.54l14.78,12.97L3.12,6.37c-.44-.28-1.02-.2-1.36,.2l-.25,.29c-.15,.17-.24,.39-.26,.62L.2,22.59s-1.46,18.19,3.44,25.38c7.02,10.3,28.1,26.57,37.61,29.23,.84,.23,1.57-.61,1.25-1.41-2.22-5.45-2.04-13.71-1.89-16.65,.03-.59,.55-1.05,1.14-1,12.84,1.2,18.32,10.27,20.3,14.91,.38,.88,1.66,.83,1.97-.09,6.91-20.85-.99-35.42-5.07-41.11-.55-.77,.13-1.8,1.06-1.64,5.34,.94,11.62-1.02,14.62-2.15,.78-.29,.93-1.33,.26-1.83-8.95-6.69-21.09-17.82-21.68-18.37-.02-.01-.03-.03-.05-.04C40.92-2.58,21.78,.39,21.78,.39Z",
  },
  {
    index: 10,
    name: "Tooth less dent",
    path: "M.63,4.96s-.26-.24-.37-.34c-.12-.11-.21-.21-.26-.26,1.88,12,8.26,44.18,23.6,57.92,34.73,31.22,31.32,9.83,42.89-2.26s33.83-10.35-.9-41.57C50.07,4.61,16.51,.96,4.04,0c.24,.1,.68,.23,.63,.52-.18,1.01-3.53,4.8-4.04,4.44Z",
  },
  {
    index: 11,
    name: "Tooth alt",
    path: "M20.08,19.01C8.96,8.35,2.45,3.73,.57,5.17,0,5.61-.14,6.62,.15,8.19c1.87,16.26,7.54,37.33,23.4,54.29,3.9,4.16,18.22,19.37,28.68,15.78,6.03-2.07,7.89-11.44,14.21-18.04,6.38-6.66,16.01-9.13,17.54-15.22,2.59-10.27-14.08-23.03-18.44-26.35C57.33,12.41,38.77,.74,7.3,.02c-1.45-.1-2.35,.14-2.69,.71-1.18,1.96,4.18,7.85,16.07,17.66-1.29,1.33,.69-.71-.6,.62Z",
  },
];
const animationObj = [
  {
    technique: "Traditionnelle",
    color: "#1b0c41",
    path: "M0 0 C50 50 50 100 0 100 C-50 100 -50 50 0 0", // TearDrop petal shape
  },
  {
    technique: "Numérique",
    color: "#721a6e",
    path: "M-35 0 C-25 25 25 25 35 0 C50 25 25 75 0 100 C-25 75 -50 25 -35 0", // Funnel petal shape
  },
  {
    technique: "Papiers découpés",
    color: "#c63d4d",
    path: "M0,0 C50,40 50,70 20,100 L0,85 L-20,100 C-50,70 -50,40 0,0", // Pacman petal shape
  },
  {
    technique: "Volume",
    color: "#f8890c",
    path: "M0,85 L-20,100 C-55,70 -40,50 -30,40 L-20,60 C-35,20 -10,25 0,0 M0,85 L20,100 C55,70 40,50 30,40 L20,60 C35,20 10,25 0,0", // Fire petal
  },
  {
    technique: "Variée",
    color: "#f1ef75",
    path: "M0 0 C50 25 50 75 0 100 C-50 75 -50 25 0 0", // Simple ellipse with sharp ends
  },
];

const pathWidth = 120;
const rowMargin = 50; // add margin between rows
const perRow = Math.floor(width / pathWidth);

const calculateGridPos = (i) => {
  const row = Math.floor(i / perRow);
  const col = i % perRow;
  return [
    (col + 0.5) * pathWidth,
    (row + 0.5) * pathWidth + row * rowMargin, // add margin between rows
  ];
};

// The component starts from here

const FlowerAnimation = ({ data }) => {
  const svgRef = useRef(null);

  const svgHeight =
    (Math.ceil(data.length / perRow) + 0.5) * pathWidth +
    Math.max(0, Math.ceil(data.length / perRow) - 1) * rowMargin;

  // calculate the scales
  const flowersObj = (data) => {
    // const petalScale = d3.scaleOrdinal().range(data.map((d) => d.words));

    const numPetalScale = d3
      .scaleQuantize()
      .domain(d3.extent(data, (d) => d.words))
      .range(_.range(5, 13));

    return _.map(data, (d, i) => {
      return {
        id: d.id,
        title: d.title,
        color: animationObj.find((film) => film.technique === d.technique)
          .color,
        path: animationObj.find((film) => film.technique === d.technique).path,
        palette: d.palette, // Add this line to include the palette property
        // scale: petalScale(d.words),
        numPetals: numPetalScale(d.words),
        translate: calculateGridPos(i),
      };
    });
  };

  // Memoize the flowersObj function
  const memoizedFlowersObj = useMemo(() => flowersObj(data), [data]);

  const draw = () => {
    if (svgRef.current) {
      const svg = d3.select(svgRef.current);

      // Add Gaussian blur filter
      // eslint-disable-next-line no-unused-vars
      const filter = svg
        .append("defs")
        .append("filter")
        .attr("id", "blur")
        .append("feGaussianBlur")
        .attr("stdDeviation", 4); // adjust the blur intensity by changing the stdDeviation value

      const flower = svg
        .selectAll("g")
        .data(memoizedFlowersObj)
        .enter()
        .append("g")
        .attr("transform", (d) => `translate(${d.translate})`);

      // Add background circles
      const circleGroup = flower
        .append("g")
        .attr("class", "background-circles");
      const circleAngles = [0, 72, 144, 216, 288]; // angles for 5 circles around the center
      const circleRadius = 30; // radius of circles

      circleGroup
        .selectAll("circle")
        .data((d) =>
          circleAngles.map((angle, i) => ({ angle, color: d.palette[i] }))
        )
        .enter()
        .append("circle")
        .attr("cx", (d) => circleRadius * Math.cos((d.angle * Math.PI) / 180))
        .attr("cy", (d) => circleRadius * Math.sin((d.angle * Math.PI) / 180))
        .attr("r", circleRadius)
        .attr("fill", (d) => d.color)
        .attr("fill-opacity", 0.45)
        .attr("stroke", "none")
        .attr("filter", "url(#blur)"); // apply the blur filter

      // Draw flower petals
      flower
        .selectAll("path")
        .data((d) => {
          return _.times(d.numPetals, (i) =>
            Object.assign({}, d, { rotate: i * (360 / d.numPetals) })
          );
        })
        .enter()
        .append("path")
        .attr("transform", (d) => `rotate(${d.rotate}) scale(${0.5})`)
        .attr("d", (d) => d.path)
        .attr("fill", "none")
        // .attr("stroke", (d) => d.color)
        .attr("stroke", "#2b2d2f")
        .attr("fill-opacity", 0.5)
        .attr("stroke-width", 5);

      // Add text
      const text = flower.append("text");

      text
        .attr("text-anchor", "middle")
        .attr("dy", 80)
        .style("font-size", ".7em")
        .style("font-weight", "bold")
        .style("font-style", "italic")
        // .style("text-shadow", "1px 1px 1px rgba(0,0,0,0.5)") // add drop shadow
        .style("fill", "black") // set text color to white
        .text((d) => _.truncate(d.title, { length: 20 }));
    }
  };

  useEffect(() => draw(), [data, memoizedFlowersObj]);

  return (
    <div>
      <h1>Flower Animation</h1>
      <div className={`max-h-[500px] overflow-y-auto overflow-x-hidden`}>
        <svg ref={svgRef} width={width} height={svgHeight}></svg>
      </div>
    </div>
  );
};

export default FlowerAnimation;
